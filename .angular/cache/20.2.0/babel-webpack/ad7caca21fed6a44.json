{"ast":null,"code":"import { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/api.service\";\nimport * as i3 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    router;\n    api;\n    email = '';\n    password = '';\n    showPassword = false;\n    loading = false;\n    constructor(router, api) {\n      this.router = router;\n      this.api = api;\n    }\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    }\n    toast(msg) {\n      window.alert(msg);\n    }\n    register() {\n      if (!this.email || !this.password) {\n        this.toast('Please enter both email and password.');\n        return;\n      }\n      this.loading = true;\n      const data = {\n        email: this.email.trim().toLowerCase(),\n        password: this.password\n      };\n      this.api.register(data).subscribe({\n        next: () => {\n          this.loading = false;\n          this.toast('✅ Registration successful! Please log in.');\n          this.router.navigate(['/login']);\n        },\n        error: err => {\n          this.loading = false;\n          console.error('Registration failed:', err);\n          this.toast(err?.error?.error || 'Registration failed.');\n        }\n      });\n      // optional: clear fields\n      this.email = '';\n      this.password = '';\n    }\n    static ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 13,\n      vars: 6,\n      consts: [[\"registerForm\", \"ngForm\"], [3, \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter your email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"margin-top\", \"10px\"], [\"name\", \"password\", \"placeholder\", \"Enter your password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"type\"], [\"type\", \"button\", 2, \"margin-left\", \"8px\", 3, \"click\"], [2, \"margin-top\", \"15px\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 1, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.register());\n          });\n          i0.ɵɵelementStart(4, \"div\")(5, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.togglePassword());\n          });\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"button\", 7);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.showPassword ? \"Hide\" : \"Show\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Registering...\" : \"Register\", \" \");\n        }\n      },\n      dependencies: [FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, CommonModule],\n      styles: [\".register-container[_ngcontent-%COMP%]{max-width:400px;margin:auto;padding:20px;background:#fff;border-radius:10px;box-shadow:0 2px 8px #0000001a}.register-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center}.register-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.register-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin:10px 0;font-weight:700}.register-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px;margin-top:4px;border-radius:4px;border:1px solid #ccc}.register-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:15px;padding:10px;border:none;background-color:#3f51b5;color:#fff;border-radius:4px;cursor:pointer}.register-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#2c3a9e}.register-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:15px;text-align:center}\"]\n    });\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
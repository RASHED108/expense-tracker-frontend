{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    tokenKey = 'access_token';\n    emailKey = 'user_email';\n    loggedIn$ = new BehaviorSubject(!!localStorage.getItem(this.tokenKey));\n    isLoggedIn$ = this.loggedIn$.asObservable();\n    get token() {\n      return localStorage.getItem(this.tokenKey);\n    }\n    get email() {\n      return localStorage.getItem(this.emailKey);\n    }\n    // Call this after /auth/login succeeds\n    // email is optional to avoid TS error when it's missing/undefined\n    loginSuccess(token, email) {\n      localStorage.setItem(this.tokenKey, token);\n      localStorage.setItem(this.emailKey, email ?? ''); // store empty string if undefined/null\n      localStorage.setItem('isLoggedIn', 'true');\n      this.loggedIn$.next(true);\n    }\n    logout() {\n      localStorage.removeItem(this.tokenKey);\n      localStorage.removeItem(this.emailKey);\n      localStorage.removeItem('isLoggedIn');\n      this.loggedIn$.next(false);\n    }\n    getCurrentUser() {\n      return this.email;\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let AddTransactionComponent = /*#__PURE__*/(() => {\n  class AddTransactionComponent {\n    api;\n    router;\n    model = {\n      type: 'expense',\n      // default\n      amount: 0,\n      category: 'Food',\n      // safe default\n      date: new Date().toISOString().slice(0, 10),\n      // YYYY-MM-DD\n      note: ''\n    };\n    saving = false;\n    error = '';\n    constructor(api, router) {\n      this.api = api;\n      this.router = router;\n    }\n    saveTransaction() {\n      // safer validation\n      if (!this.model.type ||\n      // type missing\n      !this.model.category?.trim() ||\n      // category empty/blank\n      !this.model.date ||\n      // no date\n      !this.model.note?.trim() ||\n      // note empty/blank\n      this.model.amount === null ||\n      // no amount\n      isNaN(Number(this.model.amount)) ||\n      // not a number\n      Number(this.model.amount) <= 0 // negative or zero\n      ) {\n        alert('Please fill in all fields with valid values.');\n        return;\n      }\n      this.saving = true;\n      this.error = '';\n      // call Flask API: POST /transactions (Authorization header auto-added by interceptor)\n      this.api.addTransaction({\n        type: this.model.type,\n        category: this.model.category,\n        amount: Number(this.model.amount),\n        date: this.model.date,\n        note: this.model.note.trim()\n      }).subscribe({\n        next: () => {\n          this.saving = false;\n          this.router.navigate(['/transactions']);\n        },\n        error: err => {\n          this.saving = false;\n          this.error = err?.error?.error || 'Failed to save transaction';\n          alert(this.error);\n        }\n      });\n    }\n    static ɵfac = function AddTransactionComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AddTransactionComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddTransactionComponent,\n      selectors: [[\"app-add-transaction\"]],\n      decls: 42,\n      vars: 6,\n      consts: [[\"txForm\", \"ngForm\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\", \"disabled\", \"\"], [\"value\", \"income\"], [\"value\", \"expense\"], [\"for\", \"amount\"], [\"id\", \"amount\", \"type\", \"number\", \"name\", \"amount\", \"required\", \"\", \"min\", \"0.01\", \"step\", \"0.01\", \"inputmode\", \"decimal\", \"autocomplete\", \"off\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"category\"], [\"id\", \"category\", \"name\", \"category\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"Food\"], [\"value\", \"Rent\"], [\"value\", \"Transport\"], [\"value\", \"Entertainment\"], [\"for\", \"date\"], [\"id\", \"date\", \"type\", \"date\", \"name\", \"date\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"note\"], [\"id\", \"note\", \"type\", \"text\", \"name\", \"note\", \"required\", \"\", \"maxlength\", \"80\", \"autocomplete\", \"off\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function AddTransactionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Add a New Transaction\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 1, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function AddTransactionComponent_Template_form_ngSubmit_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.saveTransaction());\n          });\n          i0.ɵɵelementStart(4, \"label\", 2);\n          i0.ɵɵtext(5, \"Type:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddTransactionComponent_Template_select_ngModelChange_6_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.model.type, $event) || (ctx.model.type = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementStart(7, \"option\", 4);\n          i0.ɵɵtext(8, \"-- Select type --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 5);\n          i0.ɵɵtext(10, \"Income\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"option\", 6);\n          i0.ɵɵtext(12, \"Expense\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(13, \"br\");\n          i0.ɵɵelementStart(14, \"label\", 7);\n          i0.ɵɵtext(15, \"Amount:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_16_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.model.amount, $event) || (ctx.model.amount = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\");\n          i0.ɵɵelementStart(18, \"label\", 9);\n          i0.ɵɵtext(19, \"Category:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"select\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddTransactionComponent_Template_select_ngModelChange_20_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.model.category, $event) || (ctx.model.category = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementStart(21, \"option\", 4);\n          i0.ɵɵtext(22, \"-- Select a category --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"option\", 11);\n          i0.ɵɵtext(24, \"Food\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"option\", 12);\n          i0.ɵɵtext(26, \"Rent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"option\", 13);\n          i0.ɵɵtext(28, \"Transport\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"option\", 14);\n          i0.ɵɵtext(30, \"Entertainment\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(31, \"br\");\n          i0.ɵɵelementStart(32, \"label\", 15);\n          i0.ɵɵtext(33, \"Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"input\", 16);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_34_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.model.date, $event) || (ctx.model.date = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"br\");\n          i0.ɵɵelementStart(36, \"label\", 17);\n          i0.ɵɵtext(37, \"Note:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"input\", 18);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_38_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.model.note, $event) || (ctx.model.note = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(39, \"br\");\n          i0.ɵɵelementStart(40, \"button\", 19);\n          i0.ɵɵtext(41, \"Save\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const txForm_r2 = i0.ɵɵreference(3);\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.model.type);\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.model.amount);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.model.category);\n          i0.ɵɵadvance(14);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.model.date);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.model.note);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !txForm_r2.form.valid);\n        }\n      },\n      dependencies: [CommonModule, FormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MaxLengthValidator, i3.MinValidator, i3.NgModel, i3.NgForm],\n      styles: [\"form[_ngcontent-%COMP%]{max-width:400px;margin:30px auto;display:flex;flex-direction:column;gap:15px}form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:3px}form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:8px;font-size:1rem;border:1px solid #ccc;border-radius:4px}form[_ngcontent-%COMP%]   #type[_ngcontent-%COMP%]{background-color:#f0f8ff;font-weight:700}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:10px;background-color:#ffc107;border:none;border-radius:5px;cursor:pointer;font-weight:700;font-size:1rem;transition:background-color .2s ease-in-out}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#e0a800}\"]\n    });\n  }\n  return AddTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}